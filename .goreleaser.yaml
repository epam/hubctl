project_name: hubctl

before:
  hooks:
    - go mod download

dist: bin

builds:
  - env:
      - CGO_ENABLED=0
    main: ./cmd/hub
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s
      - -w
      - -X 'github.com/epam/hubctl/cmd/hub/util.ref={{ .Tag }}'
      - -X 'github.com/epam/hubctl/cmd/hub/util.commit={{ .ShortCommit }}'
      - -X 'github.com/epam/hubctl/cmd/hub/util.buildAt={{ time "2006.01.02 15:04:05 MST" }}'

archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  filters:
    exclude:
      - "(?i)readme"
      - "(?i)^[typo]{4}"
      - "upd"

brews:
  - name: hubctl

    tap:
      owner: epam
      name: homebrew-hubctl
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    commit_author:
      name: therealspaceship
      email: therealspaceship@users.noreply.github.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Version }}"

    folder: Formula

    homepage: "https://hubctl.io/"
    description: "Hub CTL is stack composition and lifecycle tool."
    license: "MPL-2.0"
    custom_block: |
      head "https://github.com/epam/hubctl"
    caveats: |
      hubctl version
      hubctl help
      hubctl elaborate hub.yaml params.yaml -o hub.yaml.elaborate
      hubctl deploy hub.yaml.elaborate -e NAME=stage

    dependencies:
      - name: jq
      - name: yq
      - name: npm
        type: optional

    test: |
      output = shell_output("#{bin}/hubctl version").chomp
      assert output.start_with?("Hub CTL git ")
      system "false"

    post_install: |
      hub_home = Pathname.new "#{Dir.home}/.hub"
      unless hub_home.exist?
          system "#{Formula["hub"].opt_bin}/hubctl", "extensions", "install"
      end
